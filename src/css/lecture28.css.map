{"version":3,"sourceRoot":"","sources":["lecture28.scss"],"names":[],"mappings":";AAAA;AAyBA;AACE;EAjBA,aAkBiB;;;AASnB;AACE;EA5BA,aA6BiB;;;AAKnB;AACE;EA9BA,aA+BA;;;AAGF;AAWE;AACE;EAVF,OADa;EAEb,SAFyB;EAGzB,QAHoC;EAIpC,OAJgD;;AAchD;AACE;EAdF,OAMM;EALN,SAKM;EAJN,QAHoC;EAIpC,OAJgD;;AAmBhD;AACE;EAnBF,OAqBI;EApBJ,SAKM;EAJN,QAIM;EAHN,OAJgD","sourcesContent":["/* 可変長 引数 */\n\n// 個数を限定せず、複数の値を渡せる引数\n// 例：text-shadow（カンマ区切で複数の影の値を設定できる）\n\n@use 'sass:string'; // unquote()用\n\n// サンプル：通常\n@mixin shadow1($value) {\n  text-shadow: $value;\n}\n// サンプル：可変長引数対応\n// →引数の数を限定せず処理される\n@mixin shadow2($value...) {\n  text-shadow: $value;\n}\n\n// 複数の影を入れる\n// .mainText1 {\n//   @include shadow(8px 8px 0 #666, 10px -10px 0 #999);\n//   // Only 1 argument allowed, but 2 were passed.\n// }\n\n// 対処法1\n// 定義名( (影1,影2) )と括弧で括り1つの引数として渡す\n.mainText1 {\n  /* 1つの引数として渡す */\n  @include shadow1((8px 8px 0 #666, 10px -10px 0 #999));\n}\n\n// 対処法2\n// 文字列として渡す (\"影1, 影2\")\n// css出力時に文字列にならないようにunquoteで更に囲む\n// 定義名( string.unquote(\"影1, 影2\") )\n// ※事前に「@use 'sass:string'」を読み込む\n\n.mainText2 {\n  /* 文字列として渡す */\n  @include shadow1(string.unquote('8px 8px 0 #666, 10px -10px 0 #999'));\n}\n\n// 対処法3\n// 可変長引数を使用【本題】\n.mainText3 {\n  /* 可変長引数を使用 */\n  @include shadow2(8px 8px 0 #666, 10px -10px 0 #999);\n}\n\n/* ミックスインの定義引数が複数ある際に、呼び出し元で一気に渡す場合の可変長引数 */\n@mixin box($w: 300px, $pd: 20px, $mg: 40px, $clr: #f00) {\n  width: $w;\n  padding: $pd;\n  margin: $mg;\n  color: $clr;\n}\n\n$value: 200px, 40px; // カンマ区切で2値格納した変数定義\n\n.mainBox {\n  .normalBox {\n    /* デフォルト値で呼び出し */\n    @include box;\n  }\n  .restBox1 {\n    /* 可変長引数で引数を渡す */\n    // @include box($value); // width: 200px, 40px;になってしまう\n    @include box($value...); // width:200px, padding:40pxと想定道理に出力される\n  }\n  .restBox2 {\n    /* 可変長引数で引数を渡す2 */\n    @include box(\n      300px,\n      $value...\n    ); // widthは直書, paddingとmarginに変数の内容が出力される\n  }\n}\n\n// $w: 400px,(直接指定)\n// $pd: 200px,（$valueの1つ目の値）\n// $mg: 40px,（$valueの2つ目の値）\n// $clr: #0f0（直接指定）\n// のような複雑な指定時は、可変長引数を渡すのは向いていない\n// ★ 推奨される記述（ nth()で$valueを展開・番号を指定 ） ★\n// @include box(\n//     $w: 400px,\n//     $pd: nth($value, 1), // $value の 1番目 (200px)\n//     $mg: nth($value, 2), // $value の 2番目 (40px)\n//     $clr: #0f0\n// );\n"],"file":"lecture28.css"}