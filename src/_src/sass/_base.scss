@use 'variables'; // 定義した変数集を読み込む
@use 'mixins'; // 定義したミックスイン集を読み込む
@use 'media'; // 定義したメディアクエリ集を読み込む
@use 'sass:color'; // variablesに定義したmapを利用するため
@use 'sass:map'; // variablesに定義したmapを利用するため

// 基本的なスタイルを記述していくscss

/* 全タグの基本設定（初期化） */
* {
  margin: 0;
  padding: 0;
}

/* 大まかな基本設定 */
body {
  font-size: 15px;
  color: #333;
}

p,
li {
  line-height: 2rem;
}
a {
  text-decoration: none;
  color: #333;
}
li {
  list-style: none;
}

/* 個別要素 */
// ネスト構造⇒HTML内のある程度まとまった親子関係で書くと楽
.header {
  min-height: 200px - map.get(variables.$padding, headerTop) - map.get(variables.$padding, headerBottom);
  width: 100%;
  background: url('#{map.get(variables.$path, img)}header_001.jpg') no-repeat center top;
  background-size: cover;
  padding-top: map.get(variables.$padding, headerTop);
  padding-bottom: map.get(variables.$padding, headerBottom);

  .title {
    width: map.get(variables.$width, contents);
    margin: 0 auto;
    text-align: center;
    @include mixins.textShadow(#fff, 1);
    @include media.media('tb') {
      width: calc(100% - #{map.get(variables.$padding, area) * 2});
    }
  }
  .sub_title {
    @extend .title; // .titleのスタイル継承（includeの内容も継承）
    font-size: 1.2rem;
  }
}

.g_navi {
  height: map.get(variables.$gnavi, height); // 変数を使用する際に名前空間を指定
  // height: variables.$GNaviHeight; // 変数を使用する際に名前空間を指定
  width: 100%;
  border-bottom: 1px solid #eee;
  ul {
    width: map.get(variables.$gnavi, buttonWidth) * 4; // 150px*4個
    // width: variables.$GNaviButtonWidth * 4; // 150px*4個
    margin: 0 auto;
    overflow: hidden; //floatへの対応
    @include media.media('sp') {
      width: 100%;
      background: #fff;
      position: absolute;
      padding-top: 30px;
      top: 0;
      left: 0;
      &::after {
        content: '▼ Menu';
        position: absolute;
        top: 5px;
        left: 20px;
      }
    }
    li {
      width: map.get(variables.$gnavi, buttonWidth);
      height: map.get(variables.$gnavi, height);
      float: left;
      text-align: center;

      @include media.media('sp') {
        display: none;
        float: none;
        width: calc(100% - #{map.get(variables.$padding, area) * 2});
        padding: 0 map.get(variables.$padding, area);
        height: auto;
      }

      a {
        display: block;
        line-height: map.get(variables.$gnavi, height);

        @include media.media('sp') {
          line-height: inherit;
        }

        &:hover {
          // 親セレクタ
          background: rgba(#000, 0.1);
        }
      }
    }
  }
}

.contents {
  width: map.get(variables.$width, contents); //variablesファイルに定義された$widthマップ、のcontentsキーの中身を取得
  margin: 0 auto;
  overflow: hidden;

  /* タブレット対応 */
  @include media.media('tb') {
    width: 100%;
  }

  .main_area {
    width: map.get(variables.$width, contents) - map.get(variables.$width, sideArea) - map.get(variables.$padding, area) * 2;
    float: left;
    padding: map.get(variables.$padding, area);

    /* タブレット対応 */
    @include media.media('tb') {
      width: calc(100% - #{map.get(variables.$width, sideArea)} - #{map.get(variables.$padding, area)} * 2);
    }
    /* スマホ対応 */
    @include media.media('sp') {
      width: calc(100% - #{map.get(variables.$padding, area)} * 2);
      float: none;
    }
  }
  .side_area {
    width: map.get(variables.$width, sideArea) - map.get(variables.$padding, area) * 2; // pdの左右の幅を引く
    float: right;
    padding: map.get(variables.$padding, area);

    /* スマホ対応 */
    @include media.media('sp') {
      width: calc(100% - #{map.get(variables.$padding, area)} * 2);
      float: none;
    }
  }
  %side_area_box {
    // css出力時には残さない継承元
    border: 1px solid #eee;
    border-radius: 5px;
    padding: 10px;
    h3 {
      margin-bottom: 5px;
    }
  }
  .search_area {
    @extend %side_area_box; //side_area_boxのスタイル継承
    margin-bottom: 20px;

    input[type='text'] {
      padding: 3px 5px;
      border: 1px solid #ddd;
      border-radius: 3px;
      font-size: 0.9rem;
    }

    button {
      background: linear-gradient(#f2f2f2, color.adjust(#f2f2f2, $lightness: -10%));
      border: 1px solid #ddd;
      border-radius: 3px;
      padding: 3px 10px;
    }
  }
  .category_area {
    @extend %side_area_box; //side_area_boxのスタイル継承

    li {
      & + li {
        border-top: 1px solid #eee;
      }

      a {
        display: block;
        padding: 3px;

        &:hover {
          background: rgba(#000, 0.1);
        }
      }
      @include mixins.linkArrow;
    }
  }
}

.footer {
  padding: 20px;
  width: 100%;
  text-align: center;

  @include media.media('tb') {
    width: calc(100% - #{map.get(variables.$padding, area) * 2});
  }
}
